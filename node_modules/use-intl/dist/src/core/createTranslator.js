import createTranslatorImpl from './createTranslatorImpl';
import { defaultGetMessageFallback, defaultOnError } from './defaults';
/**
 * Translates messages from the given namespace by using the ICU syntax.
 * See https://formatjs.io/docs/core-concepts/icu-syntax.
 *
 * If no namespace is provided, all available messages are returned.
 * The namespace can also indicate nesting by using a dot
 * (e.g. `namespace.Component`).
 */
export default function createTranslator({ getMessageFallback = defaultGetMessageFallback, messages, namespace, onError = defaultOnError, ...rest }) {
    // We have to wrap the actual function so the type inference for the optional
    // namespace works correctly. See https://stackoverflow.com/a/71529575/343045
    // The prefix ("!") is arbitrary.
    return createTranslatorImpl({
        ...rest,
        onError,
        getMessageFallback,
        messages: { '!': messages },
        namespace: namespace ? `!.${namespace}` : '!'
    }, '!');
}
//# sourceMappingURL=createTranslator.js.map