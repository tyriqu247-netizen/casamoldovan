import { inheritsLoose as _inheritsLoose, wrapNativeSuper as _wrapNativeSuper } from '../_virtual/use-intl.esm.js';

var IntlErrorCode;
(function (IntlErrorCode) {
  IntlErrorCode["MISSING_MESSAGE"] = "MISSING_MESSAGE";
  IntlErrorCode["MISSING_FORMAT"] = "MISSING_FORMAT";
  IntlErrorCode["ENVIRONMENT_FALLBACK"] = "ENVIRONMENT_FALLBACK";
  IntlErrorCode["INSUFFICIENT_PATH"] = "INSUFFICIENT_PATH";
  IntlErrorCode["INVALID_MESSAGE"] = "INVALID_MESSAGE";
  IntlErrorCode["INVALID_KEY"] = "INVALID_KEY";
  IntlErrorCode["FORMATTING_ERROR"] = "FORMATTING_ERROR";
})(IntlErrorCode || (IntlErrorCode = {}));
var IntlError = /*#__PURE__*/function (_Error) {
  _inheritsLoose(IntlError, _Error);
  function IntlError(code, originalMessage) {
    var _this;
    var message = code;
    if (originalMessage) {
      message += ': ' + originalMessage;
    }
    _this = _Error.call(this, message) || this;
    _this.code = void 0;
    _this.originalMessage = void 0;
    _this.code = code;
    if (originalMessage) {
      _this.originalMessage = originalMessage;
    }
    return _this;
  }
  return IntlError;
}( /*#__PURE__*/_wrapNativeSuper(Error));

export { IntlErrorCode, IntlError as default };
//# sourceMappingURL=use-intl.esm.js.map
