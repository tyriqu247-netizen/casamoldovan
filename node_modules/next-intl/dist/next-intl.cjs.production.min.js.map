{"version":3,"file":"next-intl.cjs.production.min.js","sources":["../src/client/NextIntlClientProvider.tsx"],"sourcesContent":["'use client';\n\nimport {useRouter} from 'next/router';\nimport React, {ComponentProps} from 'react';\nimport {IntlProvider} from 'use-intl';\n\ntype Props = Omit<ComponentProps<typeof IntlProvider>, 'locale'> & {\n  locale?: string;\n};\n\nexport default function NextIntlProvider({locale, ...rest}: Props) {\n  let router;\n  try {\n    // Reading from context is practically ok to do conditionally\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    router = useRouter();\n  } catch (error) {\n    // Calling `useRouter` is not supported in the app folder\n  }\n\n  // The router can be undefined if used in a context outside\n  // of Next.js (e.g. unit tests, Storybook, ...)\n  if (!locale && router) {\n    locale = router.locale;\n  }\n\n  if (!locale) {\n    throw new Error(\n      process.env.NODE_ENV !== 'production'\n        ? \"Couldn't determine locale. Please pass an explicit `locale` prop the provider, or if you're using the `pages` folder, use internationalized routing (https://nextjs.org/docs/advanced-features/i18n-routing).\"\n        : undefined\n    );\n  }\n\n  return <IntlProvider locale={locale} {...rest} />;\n}\n"],"names":["_ref","locale","router","rest","_objectWithoutPropertiesLoose","_excluded","useRouter","error","Error","undefined","React","createElement","IntlProvider","_extends"],"mappings":"mdAUc,SAAmDA,GAAvBC,IACpCC,EADoCD,IAAAA,OAAWE,oIAAYC,CAAAJ,EAAAK,GAE3D,IAGFH,EAASI,EAASA,YAClB,MAAOC,IAUL,IAJCN,GAAUC,IACbD,EAASC,EAAOD,SAGbA,EACH,MAAM,IAAIO,WAGJC,GAIR,OAAOC,UAAAC,cAACC,EAADA,aAAAC,EAAA,CAAcZ,OAAQA,GAAYE"}