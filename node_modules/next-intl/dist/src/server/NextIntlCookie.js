// Reuse the legacy cookie name
// https://nextjs.org/docs/advanced-features/i18n-routing#leveraging-the-next_locale-cookie
const COOKIE_NAME = 'NEXT_LOCALE';
export default class NextIntlCookie {
    constructor(requestCookies) {
        this.requestCookies = requestCookies;
    }
    hasLocale() {
        return 'has' in this.requestCookies && this.requestCookies.has(COOKIE_NAME);
    }
    getLocale() {
        return this.requestCookies.get(COOKIE_NAME)?.value;
    }
    setLocale(locale) {
        // TODO: Waiting for https://beta.nextjs.org/docs/api-reference/cookies#thread-id=6YOM0
        this.requestCookies.set(COOKIE_NAME, locale);
    }
}
//# sourceMappingURL=NextIntlCookie.js.map